/*
 * Mercury API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1
 *
 * Generated by: https://openapi-generator.tech
 */

#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct SubmitOnboardingDataBeneficialOwners {
    /// First name.
    #[serde(rename = "firstName", skip_serializing_if = "Option::is_none")]
    pub first_name: Option<String>,
    /// Last name.
    #[serde(rename = "lastName", skip_serializing_if = "Option::is_none")]
    pub last_name: Option<String>,
    /// This must be one of: \"ChiefExecutiveOfficer\", \"ChiefOperatingOfficer\", \"ChiefTechnologyOfficer\", \"ChiefFinancialOfficer\", \"Founder\", \"President\", \"GeneralPartner\", \"Other\".
    #[serde(rename = "jobTitle", skip_serializing_if = "Option::is_none")]
    pub job_title: Option<String>,
    /// Free-form job title. Only valid if jobTitle is Other.
    #[serde(rename = "otherJobTitle", skip_serializing_if = "Option::is_none")]
    pub other_job_title: Option<String>,
    /// Should match the HTML5 valid email regexp.
    #[serde(rename = "email", skip_serializing_if = "Option::is_none")]
    pub email: Option<String>,
    /// Number between 0 and 100.
    #[serde(rename = "percentOwnership", skip_serializing_if = "Option::is_none")]
    pub percent_ownership: Option<i32>,
    /// This must be one of: \"USCitizen\", \"USResident\", \"NonResident\".
    #[serde(rename = "citizenshipStatus", skip_serializing_if = "Option::is_none")]
    pub citizenship_status: Option<String>,
    /// Type of identification document, depends on 'citizenshipStatus' value. Valid identification types per citizenship status are described below. For \"USCitizen\": \"DriversLicense\", \"Passport\", \"StateID\". For \"USResident\": \"DriversLicense\", \"Passport\", \"StateID\", \"AlienRegistrationCard\", \"EmployeeAuthorizationDocument\". For \"NonResident\": \"Passport\".
    #[serde(rename = "identificationType", skip_serializing_if = "Option::is_none")]
    pub identification_type: Option<String>,
    /// PDF file with this Beneficial Owner's ID, base64-encoded (using strict mode).
    #[serde(rename = "identificationBlob", skip_serializing_if = "Option::is_none")]
    pub identification_blob: Option<String>,
    /// This Beneficial Owner's address line 1.
    #[serde(rename = "address1", skip_serializing_if = "Option::is_none")]
    pub address1: Option<String>,
    /// This Beneficial Owner's address line 2.
    #[serde(rename = "address2", skip_serializing_if = "Option::is_none")]
    pub address2: Option<String>,
    #[serde(rename = "city", skip_serializing_if = "Option::is_none")]
    pub city: Option<String>,
    /// If US, 2-character US state code, otherwise freeform String for the region (e.g. \"Jalisco\").
    #[serde(rename = "state", skip_serializing_if = "Option::is_none")]
    pub state: Option<String>,
    /// 2-character country code per ISO 3166-1 Alpha2, e.g. \"AT\" for Austria.
    #[serde(rename = "country", skip_serializing_if = "Option::is_none")]
    pub country: Option<String>,
    /// Zip code.
    #[serde(rename = "postalCode", skip_serializing_if = "Option::is_none")]
    pub postal_code: Option<String>,
    /// This Beneficial Owner's phone number.
    #[serde(rename = "phoneNumber", skip_serializing_if = "Option::is_none")]
    pub phone_number: Option<String>,
    /// Whether this Beneficial Owner is a politically exposed person, possible values: \"IsNotPep\", \"IsPep\".
    #[serde(rename = "isPep", skip_serializing_if = "Option::is_none")]
    pub is_pep: Option<String>,
}

impl SubmitOnboardingDataBeneficialOwners {
    pub fn new() -> SubmitOnboardingDataBeneficialOwners {
        SubmitOnboardingDataBeneficialOwners {
            first_name: None,
            last_name: None,
            job_title: None,
            other_job_title: None,
            email: None,
            percent_ownership: None,
            citizenship_status: None,
            identification_type: None,
            identification_blob: None,
            address1: None,
            address2: None,
            city: None,
            state: None,
            country: None,
            postal_code: None,
            phone_number: None,
            is_pep: None,
        }
    }
}
