/*
 * Mercury API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1
 *
 * Generated by: https://openapi-generator.tech
 */

/// SubmitOnboardingDataAbout : General information about a user's company.

#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct SubmitOnboardingDataAbout {
    /// Legal business name.
    #[serde(rename = "legalBusinessName", skip_serializing_if = "Option::is_none")]
    pub legal_business_name: Option<String>,
    /// Company's website.
    #[serde(rename = "website", skip_serializing_if = "Option::is_none")]
    pub website: Option<String>,
    /// This has to be one of the following: accounting_and_tax_preparation, mercury_advertising, mercury_agriculture, art_and_photography, mercury_artificial_intelligence, mercury_augmented_reality, mercury_b2b, mercury_biotech, mercury_community, construction, mercury_consulting, mercury_consumer, mercury_crypto, mercury_developer_tools, mercury_drones, online_retailer, mercury_education, mercury_energy, mercury_enterprise, mercury_entertainment, mercury_financial_services, other_health_and_fitness_services, other_food_services, mercury_government, mercury_hardware, health_services, mercury_healthcare, insurance, private_investment_companies, legal_services_including_law_mercury, firms_marketing, mercury_marketplace, mercury_media, mercury_nonprofit, mercury_other, real_estate, employment_services, mercury_research, mercury_robotics, mercury_security, sports_teams_and_clubs, mercury_transportation, other_travel_services, mercury_virtual_reality
    #[serde(rename = "industry", skip_serializing_if = "Option::is_none")]
    pub industry: Option<String>,
    /// 2-character country code per ISO 3166-1 Alpha2, e.g. \"AT\" for Austria.
    #[serde(rename = "countryOfOperation", skip_serializing_if = "Option::is_none")]
    pub country_of_operation: Option<String>,
    /// Description of user's company.
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    /// This has to be one of the following: LocalBusiness, ForeignWithLocalOperations, ForeignWithoutLocalOperations. Where \"LocalBusiness\" refers to a US-based business.
    #[serde(rename = "operations", skip_serializing_if = "Option::is_none")]
    pub operations: Option<String>,
}

impl SubmitOnboardingDataAbout {
    /// General information about a user's company.
    pub fn new() -> SubmitOnboardingDataAbout {
        SubmitOnboardingDataAbout {
            legal_business_name: None,
            website: None,
            industry: None,
            country_of_operation: None,
            description: None,
            operations: None,
        }
    }
}
