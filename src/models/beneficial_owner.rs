/*
 * Mercury API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1
 *
 * Generated by: https://openapi-generator.tech
 */

#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct BeneficialOwner {
    #[serde(rename = "firstName", skip_serializing_if = "Option::is_none")]
    pub first_name: Option<String>,
    #[serde(rename = "lastName", skip_serializing_if = "Option::is_none")]
    pub last_name: Option<String>,
    #[serde(rename = "jobTitle", skip_serializing_if = "Option::is_none")]
    pub job_title: Option<String>,
    #[serde(rename = "otherJobTitle", skip_serializing_if = "Option::is_none")]
    pub other_job_title: Option<String>,
    #[serde(rename = "email", skip_serializing_if = "Option::is_none")]
    pub email: Option<String>,
    #[serde(rename = "percentOwnership", skip_serializing_if = "Option::is_none")]
    pub percent_ownership: Option<f64>,
    #[serde(rename = "citizenshipStatus", skip_serializing_if = "Option::is_none")]
    pub citizenship_status: Option<String>,
    #[serde(rename = "identificationType", skip_serializing_if = "Option::is_none")]
    pub identification_type: Option<String>,
    #[serde(rename = "identificationBlob", skip_serializing_if = "Option::is_none")]
    pub identification_blob: Option<std::path::PathBuf>,
    #[serde(rename = "address1", skip_serializing_if = "Option::is_none")]
    pub address1: Option<String>,
    #[serde(rename = "address2", skip_serializing_if = "Option::is_none")]
    pub address2: Option<String>,
    #[serde(rename = "city", skip_serializing_if = "Option::is_none")]
    pub city: Option<String>,
    #[serde(rename = "state", skip_serializing_if = "Option::is_none")]
    pub state: Option<String>,
    #[serde(rename = "country", skip_serializing_if = "Option::is_none")]
    pub country: Option<String>,
    #[serde(rename = "postalCode", skip_serializing_if = "Option::is_none")]
    pub postal_code: Option<String>,
    #[serde(rename = "phoneNumber", skip_serializing_if = "Option::is_none")]
    pub phone_number: Option<String>,
    #[serde(rename = "isPep", skip_serializing_if = "Option::is_none")]
    pub is_pep: Option<String>,
}

impl BeneficialOwner {
    pub fn new() -> BeneficialOwner {
        BeneficialOwner {
            first_name: None,
            last_name: None,
            job_title: None,
            other_job_title: None,
            email: None,
            percent_ownership: None,
            citizenship_status: None,
            identification_type: None,
            identification_blob: None,
            address1: None,
            address2: None,
            city: None,
            state: None,
            country: None,
            postal_code: None,
            phone_number: None,
            is_pep: None,
        }
    }
}
